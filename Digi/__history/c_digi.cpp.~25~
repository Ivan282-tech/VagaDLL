//---------------------------------------------------------------------------

#pragma hdrstop

#include "c_digi.h"
#include <Vcl.Dialogs.hpp>

extern int GODINA;
//---------------------------------------------------------------------------
TDigi::TDigi () : TVaga ()
{
//
}
TDigi::TDigi (int idVage, int sifraMagacina) : TVaga (idVage, sifraMagacina)
{
//
}
Currency TDigi::procitajTezinu(callbackTezinaIzmerena OnTezinaIzmerena, Currency *tezina)
{
	//
	return 0;
}
void TDigi::ubaciSveArtikle( int sve)
{

//	UnicodeString sql =  "select v.plu, v.com, v.up, v.s1u, v.bcf, v.flag, v.ing from PROC_MP_VAGA1(:ID, :DATUM, :GODINA) V";
//	UnicodeString name = "dspVaga" ;
//	DataPackInstance *dbVaga = new DataPackInstance(dbCon->SC,  sql,  name);
//
//	dbVaga->sds->ParamCheck = true;
//	dbVaga->sds->ParamByName("ID")->AsInteger = dmV->cdsVaga->FieldByName("ID")->AsInteger;
//	dbVaga->sds->ParamByName("DATUM")->AsDateTime = Date();
//	dbVaga->sds->ParamByName("GODINA")->AsInteger = GODINA;
//	dbVaga->cds->Active = true;
//	dbVaga->cds->First();
	TLogger* _log = new TLogger(nullptr);

	String putanja = dmV->cdsVaga->FieldByName("adresa")->AsString;



	dmV->cdsPodaci->Close();
	dmV->sdsPodaci->ParamByName("godina")->AsInteger = GODINA;
	dmV->sdsPodaci->ParamByName("datum")->AsDateTime = Date();
	dmV->sdsPodaci->ParamByName("id")->AsInteger = dmV->cdsVaga->FieldByName("ID")->AsInteger;
	dmV->cdsPodaci->Open();
	dmV->cdsPodaci->First();

	try {

		if (!DirectoryExists(ExtractFilePath(putanja)))
			CreateDir(ExtractFilePath(putanja));

	} catch (...) {
	}

	if (FileExists(putanja))
		DeleteFile(putanja);

	String naredba = "PLU,COM,UP,S1U,BCF,FLAG,ING";

	_log->Log(naredba,llInfo,putanja);

	while (!dmV->cdsPodaci->Eof) {
		naredba = dmV->cdsPodaci->FieldByName("PLU")->AsString + ",";
		naredba = naredba + dmV->cdsPodaci->FieldByName("COM")->AsString + ",";
		naredba = naredba + dmV->cdsPodaci->FieldByName("UP")->AsString + ",";
		naredba = naredba + dmV->cdsPodaci->FieldByName("S1U")->AsString + ",";
		naredba = naredba + dmV->cdsPodaci->FieldByName("BCF")->AsString + ",";
		naredba = naredba + dmV->cdsPodaci->FieldByName("FLAG")->AsString + ",";
		naredba = naredba + dmV->cdsPodaci->FieldByName("ING")->AsString ;
//		UpisiUFile(putanja, naredba, 2);
		_log->Log(naredba,llInfo,putanja);
		dmV->cdsPodaci->Next();
	}
    delete _log;

}
#pragma package(smart_init)
